import React from "react";import {View, Image, I18nManager, Text, Platform} from 'react-native';import COLORS from "../consts/colors";import { createStackNavigator } from '@react-navigation/stack';import {createDrawerNavigator} from '@react-navigation/drawer';import { createBottomTabNavigator } from '@react-navigation/bottom-tabs';import styles from '../../assets/styles'import CustomDrawerContent from './CustomDrawerContent'import i18n from "../../locale/i18n";import {useDispatch, useSelector} from "react-redux";import {logout, tempAuth} from '../actions';import SelectLoc 				from "../common/SelectLoc";import Home                     from "../components/Home";import Notifications            from "../components/Notifications";import MyOrders 				from "../components/MyOrders";import Profile 					from "../components/Profile";import GetLocation 				from "../components/GetLocation";import NewLocation 				from "../common/NewLocation";import Favourite 				from "../components/Favourite";import OfferPrice 				from "../components/OfferPrice";import RestWithdrawal 			from "../components/RestWithdrawal";import Basket 					from "../components/Basket";import BasketDetails 			from "../components/BasketDetails";import Category 				from "../components/Category";import CategoryDetails 			from "../components/CategoryDetails";import Wallet 					from "../common/Wallet";import Recharge 				from "../common/Recharge";import BankTransfer 			from "../common/BankTransfer";import Offers 					from "../components/Offers";import AboutApp 				from "../common/AboutApp";import AppPolicy 				from "../common/AppPolicy";import ContactUs 				from "../common/ContactUs";import CompAndSug 				from "../common/CompAndSug";import FAQ 						from "../components/FAQ";import Settings 				from "../common/Settings";import ProductDetails 			from "../components/ProductDetails";import OrderData 				from "../components/OrderData";import OrderSentSuccessfully 	from "../components/OrderSentSuccessfully";import EventDetails 			from "../components/EventDetails";import EventPayMethod 			from "../components/EventPayMethod";import EventSentSuccessfully 	from "../components/EventSentSuccessfully";import OrderDetails 			from "../components/OrderDetails";import AddUrRate 				from "../components/AddUrRate";import RateSuccessfully 		from "../components/RateSuccessfully";import Banks 					from "../common/Banks";import SetLocation 		    	from "../common/SetLocation";import ResultBySearch 			from "../components/ResultBySearch";import TransferToFriend 		from "../common/TransferToFriend";import BalanceSentSuccessfully 	from "../common/BalanceSentSuccessfully";const MainStack  	= createStackNavigator();const Drawer 	 	= createDrawerNavigator();const Tabs   	 	= createBottomTabNavigator();// function TabsScreen() {//// 	const token = useSelector(state => state.auth.user ? state.auth.user.data.token : null);//// 	return (// 		<Tabs.Navigator// 			initialRouteName="home"// 			tabBarOptions={{// 				activeTintColor: COLORS.darkRed,// 				style: [styles.footerStyle],// 				tabStyle : [styles.paddingVertical_5]// 			}}// 		>//// 			<Tabs.Screen// 				name="home"// 				component={Home}// 				options={{// 					tabBarLabel: ({ color, focused }) => (// 						<Text style={[styles.textBold , color === COLORS.darkRed ? styles.text_darkRed : styles.text_gray, styles.textCenter , styles.textSize_11]}>{i18n.t('home')}</Text>// 					),// 					tabBarIcon: ({ color, size }) => (// 						<Image source={color === COLORS.darkRed ? require('../../assets/images/home_yellow.png') : require('../../assets/images/home_gray.png')} style={[styles.icon20]} resizeMode={'contain'} />// 					),// 				}}// 			/>////// 			{// 				token ?// 					<Tabs.Screen// 						name="favourite"// 						component={Favourite}// 						options={{// 							tabBarLabel: ({ color, focused }) => (// 								<Text style={[styles.textBold , color === COLORS.darkRed ? styles.text_darkRed : styles.text_gray, styles.textCenter , styles.textSize_11]}>{i18n.t('favourite')}</Text>// 							),// 							tabBarIcon: ({ color, size }) => (// 								<Image source={color === COLORS.darkRed ? require('../../assets/images/heart_yellow.png') : require('../../assets/images/heart_gray.png')} style={[styles.icon20]} resizeMode={'contain'} />// 							),// 						}}{/*					/>*/}{/*					:*/}// 					null//// 			}//// 			<Tabs.Screen// 				name="offers"// 				component={Offers}// 				options={{// 					tabBarLabel: ({ color, focused }) => (// 						<Text style={[styles.textBold , color === COLORS.darkRed ? styles.text_darkRed : styles.text_gray, styles.textCenter , styles.textSize_11]}>{i18n.t('offers')}</Text>// 					),// 					tabBarIcon: ({ color, size }) => ({/*						<Image source={color === COLORS.darkRed ? require('../../assets/images/discount_yellow.png') : require('../../assets/images/discount_gray.png')} style={[styles.icon20]} resizeMode={'contain'} />*/}{/*					),*/}// 				}}// 			/>//// 			{// 				token ?// 					<Tabs.Screen// 						name="profile"{/*						component={Profile}*/}{/*						options={{*/}{/*							tabBarLabel: ({ color, focused }) => (*/}// 								<Text style={[styles.textBold , color === COLORS.darkRed ? styles.text_darkRed : styles.text_gray , styles.textCenter , styles.textSize_10]}>{i18n.t('profile')}</Text>// 							),// 							tabBarIcon: ({ color, size }) => (// 								<Image source={color === COLORS.darkRed ? require('../../assets/images/user_yellow.png') : require('../../assets/images/user_gray.png')} style={[styles.icon20]} resizeMode={'contain'} />// 							),// 						}}// 					/>// 					:// 					null//// 			}////// 		</Tabs.Navigator>// 	);// }function MyDrawer() {	return (		<Drawer.Navigator			initialRouteName="selectLoc"			drawerStyle={[styles.Width_75]}            drawerContentOptions={{                itemStyle: [{ backgroundColor: 'transparent' , marginHorizontal:0}],                labelStyle: [styles.textRegular ,{color:COLORS.gray }],            }}			drawerContent={(props) => <CustomDrawerContent {...props} />}>			{/*<Drawer.Screen name="tabs" component={TabsScreen}/>*/}			<Drawer.Screen name="home" component={Home}/>			<Drawer.Screen name='selectLoc' component={SelectLoc} options={() => ({				gestureEnabled: false			})}/>			<Drawer.Screen name='newLocation' component={NewLocation} options={() => ({				gestureEnabled: false			})}/>			<Drawer.Screen name='setLocation' component={SetLocation} options={() => ({				gestureEnabled: false			})}/>			<Drawer.Screen name='profile' component={Profile}/>			<Drawer.Screen name='myOrders' component={MyOrders}/>			<Drawer.Screen name='getLocation' component={GetLocation}/>			<Drawer.Screen name='notifications' component={Notifications}/>			<Drawer.Screen name='offerPrice' component={OfferPrice}/>			<Drawer.Screen name='restWithdrawal' component={RestWithdrawal}/>			<Drawer.Screen name='basket' component={Basket}/>			<Drawer.Screen name='basketDetails' component={BasketDetails}/>			<Drawer.Screen name='category' component={Category}/>			<Drawer.Screen name='categoryDetails' component={CategoryDetails}/>			<Drawer.Screen name='favourite' component={Favourite}/>			<Drawer.Screen name='wallet' component={Wallet}/>			<Drawer.Screen name='recharge' component={Recharge}/>			<Drawer.Screen name='banks' component={Banks}/>			<Drawer.Screen name='bankTransfer' component={BankTransfer}/>			<Drawer.Screen name='transferToFriend' component={TransferToFriend}/>			<Drawer.Screen name='balanceSentSuccessfully' component={BalanceSentSuccessfully}/>			<Drawer.Screen name='aboutApp' component={AboutApp}/>			<Drawer.Screen name='appPolicy' component={AppPolicy}/>			<Drawer.Screen name='contactUs' component={ContactUs}/>			<Drawer.Screen name='compAndSug' component={CompAndSug}/>			<Drawer.Screen name='faq' component={FAQ}/>			<Drawer.Screen name='settings' component={Settings}/>			<Drawer.Screen name='productDetails' component={ProductDetails}/>			<Drawer.Screen name='orderData' component={OrderData}/>			<Drawer.Screen name='orderSentSuccessfully' component={OrderSentSuccessfully}/>			<Drawer.Screen name='eventDetails' component={EventDetails}/>			<Drawer.Screen name='eventPayMethod' component={EventPayMethod}/>			<Drawer.Screen name='eventSentSuccessfully' component={EventSentSuccessfully}/>			<Drawer.Screen name='orderDetails' component={OrderDetails}/>			<Drawer.Screen name='addUrRate' component={AddUrRate}/>			<Drawer.Screen name='rateSuccessfully' component={RateSuccessfully}/>			<Drawer.Screen name='resultBySearch' component={ResultBySearch}/>        </Drawer.Navigator>	);}export function MainStackNavigator()  {	return(		<MainStack.Navigator mode={'card'} screenOptions={{headerShown: false}}  >			<MainStack.Screen name='myDrawer' component={MyDrawer}/>		</MainStack.Navigator>	);}